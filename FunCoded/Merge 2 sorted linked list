/*
struct ListNode{
    int val;
    struct ListNode* next; 
};
*/
struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){
    //if both are empty
    if(l1 == NULL && l2 == NULL)
    	return NULL;
    //if l1 is empty
    if(l1 == NULL){
    struct ListNode* list1 = l2,*list2 = l2;
    int temp;
    for(;list1!=NULL;list1=list1->next){
        list2 = l2;
        for(;list2!=NULL;list2=list2->next){
            if(list1->val < list2->val){
                temp = list1->val;
                list1->val = list2->val;
                list2->val = temp; 
            }
        }     
    }
    return l2;
    }
    //for l2 to empty
    if(l2 == NULL){
    struct ListNode* list1 = l1,*list2 = l1;
    int temp;
    for(;list1!=NULL;list1=list1->next){
        list2 = l1;
        for(;list2!=NULL;list2=list2->next){
            if(list1->val < list2->val){
                temp = list1->val;
                list1->val = list2->val;
                list2->val = temp; 
            }
        }     
    }
    return l1;
    }

    struct ListNode* list1 = l1;
    while(list1->next != NULL){
        list1 = list1 -> next; 
    }
    	list1->next = l2;
    	list1 = l1;
    struct ListNode* list2 = l1;
    int temp;
    for(;list1!=NULL;list1=list1->next){
        list2 = l1;
        for(;list2!=NULL;list2=list2->next){
            if(list1->val < list2->val){
                temp = list1->val;
                list1->val = list2->val;
                list2->val = temp; 
            }
        }     
    }
    return l1;
}
